require 'cocoapods_acknowledgements/plist_generator'
require 'cocoapods_acknowledgements/markdown_parser'
module CocoaPodsAcknowledgements
  class Writer
    class << self
      def file_externsion
        nil
      end

      def write(metadata, filepath)
        # check that extension is ok.
        # is_ok = false
        # return unless is_ok
        write_to_file(metadata, filepath)
      end

      def write_to_file(metadata, filepath)
      end
    end
  end

  class PlistWriter < Writer
    class << self
      def file_extension
        '.plist'
      end

      def write_to_file(metadata, filepath)
        if defined? Xcodeproj::Plist.write_to_path
          Xcodeproj::Plist.write_to_path(metadata, filepath)
        else
          Xcodeproj.write_plist(metadata, filepath)
        end
      end
    end
  end

  class HTMLWriter < Writer
    require 'nokogiri'
    class << self
      def file_extension
        '.html'
      end

      def header
        'Acknowledgements'
      end

      def footer
        'Generated by CocoaPods - https://cocoapods.org'
      end

      def write_to_file(metadata, filepath)
        # for each component of metadata we should wrap it into appropriate component.
        specs = metadata["specs"].map do |spec|
          PlistGenerator::SpecObject.new(spec)
        end
        builder = Nokogiri::HTML::Builder.new do |doc|
          doc.html {
            doc.body {
              doc.h1 {doc.text self.header}
              specs.each do |spec|
                doc.h2 {doc.text spec.name}
                doc.p
                puts "license: #{spec.licenseText}"
                license_into_html = MarkdownParser.parse_markdown(spec.licenseText)
                doc << license_into_html
              end
              doc << self.footer
            }
          }
        end
        content = builder.to_html
        File.open(filepath, 'w') do |file|
          file.write(content)
        end
      end
    end
  end
end